!function a(i,o,u){function h(e,t){if(!o[e]){if(!i[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(c)return c(e,!0);var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}var r=o[e]={exports:{}};i[e][0].call(r.exports,function(t){return h(i[e][1][t]||t)},r,r.exports,a,i,o,u)}return o[e].exports}for(var c="function"==typeof require&&require,t=0;t<u.length;t++)h(u[t]);return h}({1:[function(t,e,n){},{}],2:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function s(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),t}}();var r=function(){function r(t,e,n,s){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),this.HEIGHT=t,this.WIDTH=e,this.speed=n,this.state=this.getEmpty2DArray(this.HEIGHT,this.WIDTH),this.state[2][2]=1,this.state[3][2]=1,this.state[4][2]=1,this.state[5][2]=1,this.state[6][2]=1,this.state[7][2]=1,this.state[2][3]=1,this.state[3][3]=1,this.state[4][3]=1,this.state[5][3]=1,this.state[6][3]=1,this.state[7][3]=1,this.state[9][2]=1,this.state[9][3]=1,this.state[9][4]=1,this.state[9][5]=1,this.state[9][6]=1,this.state[9][7]=1,this.state[10][2]=1,this.state[10][3]=1,this.state[10][4]=1,this.state[10][5]=1,this.state[10][6]=1,this.state[10][7]=1,this.state[5][9]=1,this.state[6][9]=1,this.state[7][9]=1,this.state[8][9]=1,this.state[9][9]=1,this.state[10][9]=1,this.state[5][10]=1,this.state[6][10]=1,this.state[7][10]=1,this.state[8][10]=1,this.state[9][10]=1,this.state[10][10]=1,this.state[2][5]=1,this.state[2][6]=1,this.state[2][7]=1,this.state[2][8]=1,this.state[2][9]=1,this.state[2][10]=1,this.state[3][5]=1,this.state[3][6]=1,this.state[3][7]=1,this.state[3][8]=1,this.state[3][9]=1,this.state[3][10]=1,this.drawCallback=s,this.drawCallback(this.state),this.play=!1}return s(r,[{key:"startGame",value:function(){var t=this;this.play?this.timer=setInterval(function(){t.step()},this.speed):clearInterval(this.timer),this.play=!this.play}},{key:"step",value:function(){for(var t=this.getEmpty2DArray(this.HEIGHT,this.WIDTH),e=0;e<this.HEIGHT;e++)for(var n=0;n<this.WIDTH;n++){var s=this.countAliveCells(this.state,e,n);this.state[e][n]?3!==s&&2!==s||(t[e][n]=1):3===s&&(t[e][n]=1)}this.state=t,this.drawCallback(this.state)}},{key:"countAliveCells",value:function(t,e,n){for(var s=0,r=e-1;r<=e+1;r++)s+=this.getCellState(t,r,n-1),s+=this.getCellState(t,r,n+1);return s+=this.getCellState(t,e-1,n),s+=this.getCellState(t,e+1,n)}},{key:"getCellState",value:function(t,e,n){return(t[e]||[])[n]?1:0}},{key:"getEmpty2DArray",value:function(t,e){return new Array(t).fill(0).map(function(){return new Array(e).fill(0)})}}]),r}();n.default=r},{}],3:[function(t,e,n){"use strict";var s=a(t("./utils/router")),r=a(t("./routes"));function a(t){return t&&t.__esModule?t:{default:t}}new s.default(r.default)},{"./routes":4,"./utils/router":6}],4:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s=a(t("./gameOfLife")),r=a(t("./utils/drawer"));t("repl");function a(t){return t&&t.__esModule?t:{default:t}}var i=void 0,o=new r.default(document.querySelector("#content")),u=document.querySelector(".play-button"),h=[{match:"",onEnter:function(){window.location.hash="about"}},{match:"about",onEnter:function(){var t=document.querySelector("#content");c("about"),t.innerHTML='<h1 class="about"><i class="fab fa-buromobelexperte label"></i><span>Conway\'s Game of Life</span><h1>'}},{match:"text",onEnter:function(){c("text"),content.innerHTML="Text",i=new s.default(13,13,100,o.drawText),u.addEventListener("click",function(){i.startGame()})}},{match:"canvas",onEnter:function(){c("canvas"),content.innerHTML="Canvas"}},{match:"svg",onEnter:function(){c("svg"),content.innerHTML="SVG"}}];function c(t){document.querySelector(".active").className="",document.querySelector('[href="#'+t+'"]').parentElement.className="active"}n.default=h},{"./gameOfLife":2,"./utils/drawer":5,repl:1}],5:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default=function t(e){var s=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.elementForDrawing=e,this.drawText=function(t){s.elementForDrawing.innerHTML="";var e=document.createElement("pre");e.classList.add("text-content");var n="";t.forEach(function(t,e){t.forEach(function(t,e){n+=t?"x":" "}),n+="\n"}),e.innerHTML=n,s.elementForDrawing.appendChild(e)}}},{}],6:[function(t,e,n){"use strict";function s(t){var e=this;this.routes=t||[],this.currentRoute,this.previousRoute,this.currentParams,this.previousParams,window.addEventListener("hashchange",function(t){e.handler(window.location.hash)}),this.handler(window.location.hash)}Object.defineProperty(n,"__esModule",{value:!0}),s.prototype={handler:function(t){this.previousRoute=this.currentRoute,this.previousParams=this.currentParams,this.currentRoute=this.findNewRoute(t),this.launchHandlers()},findNewRoute:function(t){t=t.slice(1);for(var e=0;e<this.routes.length;e++){var n=this.routes[e];if("string"==typeof n.match&&n.match===t)return this.currentParams="",n;if("function"==typeof n.match&&n.match(t))return this.currentParams="",n;if(n.match instanceof RegExp&&n.match.test(t))return this.currentParams=t.match(n.match)||[],this.currentParams.splice(0,1),n}},launchHandlers:function(){var t=this;Promise.resolve().then(function(){t.previousRoute&&t.previousRoute.onLeave&&t.previousRoute.onLeave(t.previousParams)}).then(function(){t.currentRoute&&t.currentRoute.onBeforeEnter&&t.currentRoute.onBeforeEnter(t.currentParams)}).then(function(){t.currentRoute&&t.currentRoute.onEnter&&t.currentRoute.onEnter(t.currentParams)})}},n.default=s},{}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
